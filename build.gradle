
buildscript {
    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
        maven { url "http://repo.maven.apache.org/maven2" }
        maven { url "https://repo.grails.org/grails/core" }
        maven { url "https://oss.sonatype.org/content/groups/public/" }
        maven { url "https://repo.spring.io/libs-milestone/" }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "se.transmode.gradle:gradle-docker:${dockerVersion}"
    }
}

allprojects {

    apply plugin: 'maven'
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'idea'
    group = 'com.sjy.eval'
    version = '1.0-SNAPSHOT'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        maven { url "https://oss.sonatype.org/content/groups/public/" }
        maven { url "https://repo.spring.io/libs-milestone/" }
        jcenter()
        mavenCentral()
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    if (project.subprojects) {
        bootRepackage {
            enabled = false
        }
    } else {
        apply plugin: 'docker'
        docker {
            maintainer = 'youxun<youxun@163.com>'
            baseImage = 'openjdk:8-jre-alpine'
        }
        task dockerBuild(type: Docker, dependsOn: build) {
            applicationName = project.name
            addFile {
                from configurations.archives.artifacts.files
                into '/data/workspace/' + project.name
            }
            workingDir '/data/workspace/' + project.name
            setEnvironment('HOST_MACHINE_IP', hostMachineIp)
            defaultCommand(['java', '-jar', '-Dspring.profiles.active=docker', "${project.name}-${project.version}.jar"])
        }
    }
}

subprojects {



}


sourceSets.main.java.srcDirs = []
sourceSets.main.groovy.srcDirs += ["src/main/java"]
